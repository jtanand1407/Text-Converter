{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","onClick","toggleMode","role","htmlFor","TextForm","useState","Text","setText","style","color","heading","value","onChange","event","target","rows","newText","toUpperCase","showalert","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setmode","setalert","message","setTimeout","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.142ca834.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import {Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n              </li>\r\n              </ul>\r\n              <div className={`form-check form-switch text-${(props.mode==='light')?'dark':'light'}`} >\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n              </div>\r\n         \r\n        </div>\r\n      \r\n      </nav>\r\n      \r\n    )\r\n}\r\n    Navbar.propTypes ={\r\n        title: PropTypes.string,\r\n        about: PropTypes.string\r\n    }\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [Text, setText] = useState('Enter your text here');\r\n\r\n    const handleupClick=()=>{\r\n        let newText=Text.toUpperCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted to UpperCase!\",\"success\");\r\n    }\r\n\r\n    const handledownClick=()=>{\r\n        let newText=Text.toLowerCase();\r\n        setText(newText);\r\n        props.showalert(\"Converted to LowerCase!\",\"success\");\r\n    }\r\n\r\n    \r\n\r\n    const handleonChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <h1 style={{color: props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={Text} onChange={handleonChange} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleupClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handledownClick}>Convert to Lowercase</button>\r\n     \r\n      </div>\r\n      <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n         <p>{Text.split(\" \").length} words  {Text.length} characters</p>\r\n         <p>{0.008*Text.length} minutes read</p>\r\n         <h2>PREVIEW</h2>\r\n         <p>{Text}</p>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n  return (\r\n    \r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong> {capitalize(props.alert.type)}</strong> :  {props.alert.msg}\r\n        \r\n      </div>\r\n   \r\n  );\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport React, { useState } from 'react';\n\n\n\n\n\n\nexport default function App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showalert=(message,type)=>\n  {\n    setalert(\n      {\n        msg: message,\n        type: type\n      }\n    )\n    setTimeout(()=>{\n      setalert(null);\n    },1500);\n    \n  }\n\n  const toggleMode=()=>{\n    if(mode==='dark')\n    {\n    setmode('light');\n    document.body.style.backgroundColor='white';\n    showalert(\"Light Mode is enabled\",\"success\");\n    }\n    else\n    {\n      setmode('dark');\n      document.body.style.backgroundColor='#042743';\n      showalert(\"Dark Mode is enabled\",\"success\");\n    }\n  }\n\n  \n\n  return(\n    <>\n   \n <Navbar title=\"TextUtils\"  about=\"About\" mode={mode} toggleMode={toggleMode} />\n <Alert alert={alert}/>\n <div className=\"container my-3\" >\n      \n        <TextForm showalert={showalert} heading=\"Enter your text below\" mode={mode} />\n </div>\n \n    </>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}